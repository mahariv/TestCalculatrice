//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestCalculatrice.BDDservice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FicheUtilisateurs", Namespace="http://schemas.datacontract.org/2004/07/ServiceWCFBDD")]
    [System.SerializableAttribute()]
    public partial class FicheUtilisateurs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom {
            get {
                return this.PrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomField, value) != true)) {
                    this.PrenomField = value;
                    this.RaisePropertyChanged("Prenom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FicheOperations", Namespace="http://schemas.datacontract.org/2004/07/ServiceWCFBDD")]
    [System.SerializableAttribute()]
    public partial class FicheOperations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUtilisateursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroLigneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUtilisateurs {
            get {
                return this.IdUtilisateursField;
            }
            set {
                if ((this.IdUtilisateursField.Equals(value) != true)) {
                    this.IdUtilisateursField = value;
                    this.RaisePropertyChanged("IdUtilisateurs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroLigne {
            get {
                return this.NumeroLigneField;
            }
            set {
                if ((this.NumeroLigneField.Equals(value) != true)) {
                    this.NumeroLigneField = value;
                    this.RaisePropertyChanged("NumeroLigne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utilisateurs", Namespace="http://schemas.datacontract.org/2004/07/ServiceWCFBDD")]
    [System.SerializableAttribute()]
    public partial class Utilisateurs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom {
            get {
                return this.PrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomField, value) != true)) {
                    this.PrenomField = value;
                    this.RaisePropertyChanged("Prenom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BDDservice.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOperation", ReplyAction="http://tempuri.org/IService1/AddOperationResponse")]
        bool AddOperation(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur, string operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOperation", ReplyAction="http://tempuri.org/IService1/AddOperationResponse")]
        System.Threading.Tasks.Task<bool> AddOperationAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur, string operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveOperation", ReplyAction="http://tempuri.org/IService1/RemoveOperationResponse")]
        bool RemoveOperation(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur, TestCalculatrice.BDDservice.FicheOperations operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveOperation", ReplyAction="http://tempuri.org/IService1/RemoveOperationResponse")]
        System.Threading.Tasks.Task<bool> RemoveOperationAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur, TestCalculatrice.BDDservice.FicheOperations operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveAllOperation", ReplyAction="http://tempuri.org/IService1/RemoveAllOperationResponse")]
        bool RemoveAllOperation(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveAllOperation", ReplyAction="http://tempuri.org/IService1/RemoveAllOperationResponse")]
        System.Threading.Tasks.Task<bool> RemoveAllOperationAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUtilisateurs", ReplyAction="http://tempuri.org/IService1/GetUtilisateursResponse")]
        TestCalculatrice.BDDservice.FicheUtilisateurs[] GetUtilisateurs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUtilisateurs", ReplyAction="http://tempuri.org/IService1/GetUtilisateursResponse")]
        System.Threading.Tasks.Task<TestCalculatrice.BDDservice.FicheUtilisateurs[]> GetUtilisateursAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOperation", ReplyAction="http://tempuri.org/IService1/GetOperationResponse")]
        TestCalculatrice.BDDservice.FicheOperations[] GetOperation(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOperation", ReplyAction="http://tempuri.org/IService1/GetOperationResponse")]
        System.Threading.Tasks.Task<TestCalculatrice.BDDservice.FicheOperations[]> GetOperationAsync(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AjoutUtilisateur", ReplyAction="http://tempuri.org/IService1/AjoutUtilisateurResponse")]
        bool AjoutUtilisateur(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AjoutUtilisateur", ReplyAction="http://tempuri.org/IService1/AjoutUtilisateurResponse")]
        System.Threading.Tasks.Task<bool> AjoutUtilisateurAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RecupUtilisateur", ReplyAction="http://tempuri.org/IService1/RecupUtilisateurResponse")]
        TestCalculatrice.BDDservice.Utilisateurs RecupUtilisateur(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RecupUtilisateur", ReplyAction="http://tempuri.org/IService1/RecupUtilisateurResponse")]
        System.Threading.Tasks.Task<TestCalculatrice.BDDservice.Utilisateurs> RecupUtilisateurAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerifUtilisateur", ReplyAction="http://tempuri.org/IService1/VerifUtilisateurResponse")]
        bool VerifUtilisateur(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerifUtilisateur", ReplyAction="http://tempuri.org/IService1/VerifUtilisateurResponse")]
        System.Threading.Tasks.Task<bool> VerifUtilisateurAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SupprimerUtilisateur", ReplyAction="http://tempuri.org/IService1/SupprimerUtilisateurResponse")]
        bool SupprimerUtilisateur(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SupprimerUtilisateur", ReplyAction="http://tempuri.org/IService1/SupprimerUtilisateurResponse")]
        System.Threading.Tasks.Task<bool> SupprimerUtilisateurAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditerUtilisateur", ReplyAction="http://tempuri.org/IService1/EditerUtilisateurResponse")]
        bool EditerUtilisateur(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditerUtilisateur", ReplyAction="http://tempuri.org/IService1/EditerUtilisateurResponse")]
        System.Threading.Tasks.Task<bool> EditerUtilisateurAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TestCalculatrice.BDDservice.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TestCalculatrice.BDDservice.IService1>, TestCalculatrice.BDDservice.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddOperation(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur, string operation) {
            return base.Channel.AddOperation(utilisateur, operation);
        }
        
        public System.Threading.Tasks.Task<bool> AddOperationAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur, string operation) {
            return base.Channel.AddOperationAsync(utilisateur, operation);
        }
        
        public bool RemoveOperation(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur, TestCalculatrice.BDDservice.FicheOperations operation) {
            return base.Channel.RemoveOperation(utilisateur, operation);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveOperationAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur, TestCalculatrice.BDDservice.FicheOperations operation) {
            return base.Channel.RemoveOperationAsync(utilisateur, operation);
        }
        
        public bool RemoveAllOperation(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.RemoveAllOperation(utilisateur);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveAllOperationAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.RemoveAllOperationAsync(utilisateur);
        }
        
        public TestCalculatrice.BDDservice.FicheUtilisateurs[] GetUtilisateurs() {
            return base.Channel.GetUtilisateurs();
        }
        
        public System.Threading.Tasks.Task<TestCalculatrice.BDDservice.FicheUtilisateurs[]> GetUtilisateursAsync() {
            return base.Channel.GetUtilisateursAsync();
        }
        
        public TestCalculatrice.BDDservice.FicheOperations[] GetOperation(string nom) {
            return base.Channel.GetOperation(nom);
        }
        
        public System.Threading.Tasks.Task<TestCalculatrice.BDDservice.FicheOperations[]> GetOperationAsync(string nom) {
            return base.Channel.GetOperationAsync(nom);
        }
        
        public bool AjoutUtilisateur(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.AjoutUtilisateur(utilisateur);
        }
        
        public System.Threading.Tasks.Task<bool> AjoutUtilisateurAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.AjoutUtilisateurAsync(utilisateur);
        }
        
        public TestCalculatrice.BDDservice.Utilisateurs RecupUtilisateur(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.RecupUtilisateur(utilisateur);
        }
        
        public System.Threading.Tasks.Task<TestCalculatrice.BDDservice.Utilisateurs> RecupUtilisateurAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.RecupUtilisateurAsync(utilisateur);
        }
        
        public bool VerifUtilisateur(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.VerifUtilisateur(utilisateur);
        }
        
        public System.Threading.Tasks.Task<bool> VerifUtilisateurAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.VerifUtilisateurAsync(utilisateur);
        }
        
        public bool SupprimerUtilisateur(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.SupprimerUtilisateur(utilisateur);
        }
        
        public System.Threading.Tasks.Task<bool> SupprimerUtilisateurAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.SupprimerUtilisateurAsync(utilisateur);
        }
        
        public bool EditerUtilisateur(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.EditerUtilisateur(utilisateur);
        }
        
        public System.Threading.Tasks.Task<bool> EditerUtilisateurAsync(TestCalculatrice.BDDservice.FicheUtilisateurs utilisateur) {
            return base.Channel.EditerUtilisateurAsync(utilisateur);
        }
    }
}
